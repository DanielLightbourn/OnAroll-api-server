'use strict';

// import necessary modules
var d = require('./database');
var mysql = require('mysql');
var t = require('./tools')


exports.getVersion = function(req, res) {
  res.json({todo: 'implement version call'});
};

exports.getEvents = function(req, res) {
  // get the room data with req.params.room
  res.json({todo: 'implement getEvents call (' + req.params.room + ')'});
};

exports.getAttendance = function(req, res) {
  // get the event with req.params.event
  res.json({todo: 'implement getAttendance call (' + req.params.event + ')'});
};

exports.test1 = function(req, res) {
   res.json({message: 'Hello ' + req.params.name + ' welcome to the attendence server'});

};

// test function to allow us to add users to the table
exports.addUser = function(req, res) {
   var query1 = "INSERT INTO Users VALUES (?, ?, ?, ?, ?)";
   if (req.body.user_ID){
      var user_ID = req.body.user_ID;
   }else{
      res.json({status: 100, message: "UserID is necessary for this function."});
      return;
   }
   if (req.body.FirstName){
      var FirstName = req.body.FirstName;
   }else{var FirstName = "";}
   if (req.body.LastName){
      var LastName = req.body.LastName;
   }else{var LastName = "";}
   if (req.body.Email){
      var Email = req.body.Email;
   }else{var Email = "";}
   if (req.body.UserName){
      var UserName = req.body.UserName;
   }else{var UserName = "";}

   var sData = [user_ID, FirstName, LastName, Email, UserName];

   d.query(error, query1, sData, function (rows){
      res.json({message: "UserID: " + user_ID + " added successfully."});
   });
};

// Pulls a user ID from the database
exports.getUser = function(req, res) {
   var query1 = "SELECT user_ID,firstName,lastName,email "
              + "FROM Users "
              + "WHERE user_ID=?";
   if (parseInt(req.body.user_ID) == "NaN"){
      res.json({status: 100, message: "user_ID is invalid! "
                                    + "Error: user_ID must be a number"});
      return;
   }
   var data = [req.body.user_ID];
   d.query(error, query1, data, function(rows){
      if (rows.length < 1){
         res.json({status: 200, message:"No users exist"});
      }else{
         var mess = "Users:\n";
         res.json({status: 200, message: rows});
      }
   });
};

// Adds an attendance record for a specified event
// POST message contains user_ID,eventKey,(firstName,lastName)
exports.addAttendance = function(req, res) {
   var query1 = "SELECT e.event_ID,e.eventKey,e.allowDup,e.timeStart,"
                      + "e.timeEnd,et.name AS eventType,et.timeDependent,"
                      + "et.polyOnly "
              + "FROM Events e, EventTypes et "
              + "WHERE e.type_ID = et.type_ID AND e.eventKey = ?";
   if (parseInt(req.body.user_ID) == "NaN") {
      res.json({status: 100, message: "user_ID is not valid! "
                                    + "Error: user_ID must be a number"});
      return;
   }
   var data = [req.body.eventKey];
   d.query(error, query1, data, function(rows) {
      var entry = 0;
      if (rows.length < 1) {
         res.json({status: 100, message: "No event(s) exists with that eventKey"});
         return;
      }
      for (var i = 0; i < rows.length; i++) {
         var row = rows[i];
         var time = 1;
         var poly = 1;
         if (row["timeDependent"] == 1) {
            if (!t.withinTime(row["timeStart"], row["timeEnd"])) {
               time = 0;
            }
         }
         if (row["polyOnly"]) { 
            t.notPolyStudent(req.body.user_ID, function() {
               poly = 0;
            });
         }
         res.json({mess: time + " " + poly});
         if (time && poly) {
            var query2 = "INSERT INTO Attendance (user_ID,event_ID) "
                       + "VALUES (?, ?)";
            var data = [req.body.user_ID, row["event_ID"]];
            d.query(error, query2, data, function(rows){});
            entry += 1;
         }
      }
      if (entry == 0) {
         res.json({status: 200, message: "No attendance entry added!"});
      }else {
         res.json({status: 200, message: "Added " + entry + " entries to "
                                       + "attendance table"});
      }
   });
};
